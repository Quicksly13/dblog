security:
    encoders:
        App\Entity\UserEntity:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        our_db_provider:
            entity:
                class: App\Entity\UserEntity
                property: username
        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate

            http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            provider: our_db_provider
            form_login:
                login_path: authenticate_user
                check_path: authenticate_user
                username_parameter: user_login[username] #name of the user login form field
                password_parameter: user_login[password] #name of the user login form field
            # https://symfony.com/doc/current/security/form_login_setup.html
            logout:
                path: /user/logout
                target: view_principles
            

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/principles/edit, roles: ROLE_USER }
        - { path: ^/user/register, roles: ROLE_NOBODY }
        - { path: ^/user/reset, roles: ROLE_NOBODY }
        # Sets routes to use https on production server, and http on local host
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https, host: nobodythinks\.net$ }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http, host: localhost$ }
      
